#!/usr/bin/env bash

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
# Styles
NC='\033[0m' # No Color
BOLD=$(tput bold)
NORMAL=$(tput sgr0)

function print_message() {
    echo -e "${BOLD}${GREEN} ==> ${NC} ${BOLD}${1}${NORMAL}"
}

function print_inner_message() {
    echo -e "${BOLD}${BLUE} ->${NC} ${BOLD}${1}${NORMAL}"
}

function print_error() {
    echo -e "${BOLD}${RED} ->${NC} ${BOLD}${1}${NORMAL}"
    exit 1
}

function user_password() {
  passed=1
  while [[ ${passed} != 0 ]]; do
    passwd ${1}
    passed=$?
  done
}

# Import the selected configuration
source "_config"

print_message "Entering arch-chroot..."

print_inner_message "Setting parallel downloads..."
 
if [ ${parallel_downloads} -gt 0 ]; then
  sed -i '/^#\ParallelDownloads =/{N;s/#//g}' /etc/pacman.conf
fi

print_inner_message "Creating symlink for the localtime"

ln -sf /usr/share/zoneinfo/${timezone} /etc/localtime

print_inner_message "Setting the hardware clock"

hwclock --systohc

print_inner_message "Setting system language"

echo "LANG=\"${language}.UTF-8\"" >> /etc/locale.conf
echo "${language}.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "KEYMAP=${keymap}" > /etc/vconsole.conf

print_inner_message "Setting hosts"

echo ${hostname} > /etc/hostname
echo "127.0.1.1 ${hostname}.localdomain ${hostname}" >> /etc/hosts

pacman -S --needed --noconfirm networkmanager git
systemctl enable NetworkManager

print_inner_message "Setting root password"

user_password root

print_inner_message "Adding ${username}..."

useradd -m ${username}

print_inner_message "Setting ${username} password..."

user_password ${username}

print_inner_message "Adding groups to ${username}"

usermod -aG ${user_groups} ${username}

print_inner_message "Installing bootloader..."

# Systemd boot

# Grub
pacman -S --needed --noconfirm grub
pacman -S --needed --noconfirm efibootmgr dosfstools os-prober mtools

# If enabled and configured install dotfiles 
if [ ${install_dotfiles} -gt 0 ]; then
  git clone ${dotfiles_url} dotfiles && cd dotfiles && ${dotfiles_command}
fi

print_message "Exiting arch-chroot..."
exit 0
